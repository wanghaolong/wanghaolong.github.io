=== Content of image-61.png ===
搭建排序框架
为什么要改造流程
> 工程架构部分
1. 迭代成本过高
同早期搜索架构设计一样,服务部署存在至少5套业务代码，开发成本巨大，极易造成线上逻辑不对齐的情况
2. 优化周期过长
功能不收敛 ,一处优化，应用到其它若干服务的周期过长。
3. 稳定性不健全
无法提供一体化的解决方案 服务比较分散，技术架构不一致，难以实现完善的监控、容错机制。
+ 数据链路部分
1. 数据迟消
原始数据通过 TH 的方式在构建训练集追溯，会存在不一致问题,例如用户画像特征在离线训练集中是关联前一
天的Hive数据，但是这部分数据线上API一般是在下午2点左右更新数据，因此实际上2点之前线上使用的是T+2的画
像数据
2. 数据变更无感知
从Hive中获取的数据，需要依赖Hive到API的转换规则 比如用户画像数据以及二手房源特征数据等在从Hive到
API中存在转换逻辑，这部分需要对齐，上游变换无法感知
+ 配置改造
1. 现有配置不够统一，且比较分散 配置分为:特征工程配置、模型配置等，较为分散;离线、在线配置已经差异巨
大，不同服务间的配置差异也尤为明显
