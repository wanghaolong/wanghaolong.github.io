=== Content of image-4.png ===
v1.0 搜索架构

早期贝壳搜索架构,微服务拆分的过于细,整理流程可以概括为"调度中控预处理> 召回>精排>融合 > ABH”,
在每个环节都有3个及以上的微服务.我们暂且称之为第一阶段-

为了支撑贝壳旗下各类C端产品如 二手房、新房、租房、装修、商业地产、海外地产等的快速迭代,每条业务线都有一
套同样的架构,微服务应用超过50+,数量整体超过200多个.而此时负责工程迁代的开发人员仅有4个人.这时候存在的
问题显而易见

a. 微服务数量与开发人员数量不对等,导致个人开发效率不高,测试部署占据大量时间
b. 各业务线功能基本类似,系统优化/问题修复需要逐个解决;差异部分靠硬编码处理,扩展性极差
5. 服务链路过长,导致束体性能很差'微服务间少/无熔断降级,稳定性很差,大家都瘦于救火

1.搜索架构整合

。 首先进行逻辑梳理,进行整合,使多业务线共用同一套架构,这一步将核心应用数量缩减到7个,依次为 1中控、2.预处
理、3.召回、4 .规则排序、5.模型排序、6.多流融合、7.信息补充

间接依赖: 意图NLU 解析、用户画像、es-api服务、模型网关 等
