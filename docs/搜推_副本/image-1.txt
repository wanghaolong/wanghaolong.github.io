=== Content of image-1.png ===
我们按照数据处理流程来看, 依次经过 API层、统一网关、混推、中控、意图、召回、精排、重排、理由各环节,与业
内的差异不大

先介绍通用部分:
意图: 主要是对 query 词的解析;例如 我们输入“西二旗整租,会提取出“西二旗"、"整租 "两个标签
BE: 核心作用在于解决信息过载,控制召回数量及保障物料构成多样性,为后续精排环节减负.
排序: 主要分为粗排和精排.对应的方法无非规则、机器学习和深度学习几种;

粗排:一般使用的是业务规则,核心在于逻辑简单,效率高.

精排:一般使用的是机器学习、深度学习;远辑复杂,准确性/转化率高.
展示规则:主要用于打散,卡位排布,保证物料多样性同时,关注用户体验

再介绍贝壳特有部分:
API 作为交互层,处理用户的请求 混推层:负责多物料异构融合,保证物料多样性和策略多样性
中控层: 负责对下游各模块进行调度及接口参数校验.

在稳定性方面,必须对各模块有降级和兜底,避免空白页的情况;
数据服务:

涉及房源物料 、用户画像 和 模型特征
存储选型上,基于文本分词匹配和聚合查询的场景,把房源数据维护在es 索引中;
基于性能考虑,模型特征数据维护在 redis 中;
BERS:

依赖公司基于tf-serving 自建平台,使用grpc 调用

基础组件:

采用SpringCloud 框架,使用eureka服务注册发现,服务间通过feign进行http调用;网关使用zuul,进行降级限流;二
次开发后,融合abtest 打标,数据降级等;

部署上是按照业务线纬度独立部署,代码复用
整体已经实现配置化迭代,操作灵活.后面重点介绍.
