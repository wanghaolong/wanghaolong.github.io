=== Content of image-44.png ===
4.4 召回后
召回后主要负责两大部分功能: 业务调权、策略融合,都在应用内存中处理
业务调权
使用groovy脚本,结合配置平台实现

“dynomiccatculate™® |
“puzhu-gongyu": {
“parameters”: {
rules": [

“scripts”: [
{

xy": “cal-bid-rankScore”,
der”: 1

“doScript": " GU.sortTtems(*rankScore’, ctx); int count = gifor Ci in ctx.itens) {if Ccount >= 3) {break;}sif Ci
-itenType == 'connon_rent" && i.houseTags.contains("is_one_price’)) { i.ruleScore += 50; count += 1;}};for Ci in
ctx. items) { if Ccount >= 3) {break;};if (i.itenType — ‘conmon_rent’ && (!i.houseTags..contains("is_one_price")
‘88 i houseTags.contains('is-hot'))) {i.ruleScore += 49; count += 1;}3; for Ci in ctx.items) { if CiritenType ==
"conmon_rent" && i.listPicture == '') { i.ruleScore -='49;}}",
pdateVars": (GI),

=,
“过各规则分计算:1 RRM (MSIE) 2 无图片打压"，

融合部分

1 ¢
2      "mergeType"                融合类型(普通)
3    "name": "moo4          融合策略标识
4    "weight": {           融合权重
5         "21000011": 1,           -- 召回流id
6       "21900016": 1
7                }
8 }
9
10
moo |B | Rome               ASTRRRPRIRIREERRIEM, EIRURIIE
erage merge          ‘RI RR LILUODE NEA E UNS
mo02 。 已 优先级融合            根据候造集权重作为优先级，按优先级优先取权重训的人选集，如果取不满，则从次高的候选集中继续取，以此
上                     M8, BIBLE
Priory merge
moos BRIER              AERARLETAT CORE, HASTE, RRKON, MRT,
上                 的候选集终绎补充，直到取清为止
Weight merge
moo4 已                   SAAT: 以权重李率去取如加策咯，从造中的召回策咯中取一个房源。然后循环上面的扣作
£m
% 。 mandom_hem_merge
mo05 。 已 。。 权重概率优先级融合       每次选择一个召回策咯的所有物料:按时权量板率先取召回策略，取注为止-
Fandom state nese

至此,将召回部分功能进行抽象拆解完毕
